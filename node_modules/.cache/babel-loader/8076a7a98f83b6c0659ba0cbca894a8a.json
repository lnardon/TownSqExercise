{"ast":null,"code":"var _jsxFileName = \"/Users/lucas/Documents/GitHub/TownSqExercise/src/components/FullBlogPost.js\";\nimport React, { Component } from 'react';\nimport Modal from 'react-modal';\nimport { Link } from 'react-router-dom';\nimport '../fullBlogPostStyle.css';\nexport default class FullBlogPost extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleModal = () => {\n      this.setState({\n        modalIsOpen: !this.state.modalIsOpen\n      });\n    };\n\n    this.handleTitleChange = text => {\n      this.setState({\n        newTitle: text.target.value\n      });\n    };\n\n    this.handleBodyChange = text => {\n      this.setState({\n        newBody: text.target.value\n      });\n    };\n\n    this.handlePostUpdate = () => {\n      this.setState({\n        title: this.state.newTitle,\n        body: this.state.newBody,\n        modalIsOpen: false\n      });\n    };\n\n    this.handlePostEditCancel = () => {\n      this.setState({\n        newTitle: this.state.title,\n        newBody: this.state.body,\n        modalIsOpen: false\n      });\n    };\n\n    const _props$location$state = props.location.state,\n          title = _props$location$state.title,\n          body = _props$location$state.body,\n          userId = _props$location$state.userId;\n    this.state = {\n      modalIsOpen: false,\n      id: props.match.params.id,\n      userId: userId,\n      username: \"\",\n      title: title,\n      body: body,\n      newTitle: title,\n      newBody: body\n    };\n  }\n\n  async componentDidMount() {\n    const fetchUser = await fetch(\"http://jsonplaceholder.typicode.com/users\");\n    const creator = await fetchUser.json();\n    const postCreator = creator[this.state.userId - 1];\n    this.setState({\n      userName: postCreator.name\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Link, {\n      id: \"backButton\",\n      to: \"./\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \" Back \"), React.createElement(\"h1\", {\n      id: \"postTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, this.state.title), React.createElement(\"p\", {\n      id: \"postBody\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, this.state.body), React.createElement(\"p\", {\n      id: \"postCreator\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \" Created by \", this.state.userName), React.createElement(\"button\", {\n      id: \"editButton\",\n      onClick: this.handleModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Edit This Post\"), React.createElement(Modal, {\n      isOpen: this.state.modalIsOpen,\n      onRequestClose: this.handlePostEditCancel,\n      ariaHideApp: false,\n      contentLabel: \"Edit Post\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      id: \"modalTitleH1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \" Post Title \"), React.createElement(\"textarea\", {\n      id: \"titleInput\",\n      type: \"text\",\n      onChange: this.handleTitleChange,\n      value: this.state.newTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      id: \"modalBodyH1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \" Post Body \"), React.createElement(\"textarea\", {\n      id: \"bodyInput\",\n      type: \"text\",\n      onChange: this.handleBodyChange,\n      value: this.state.newBody,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handlePostUpdate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \" Save Changes \"), React.createElement(\"button\", {\n      onClick: this.handlePostEditCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \" Cancel \"))));\n  }\n\n}","map":{"version":3,"sources":["/Users/lucas/Documents/GitHub/TownSqExercise/src/components/FullBlogPost.js"],"names":["React","Component","Modal","Link","FullBlogPost","constructor","props","handleModal","setState","modalIsOpen","state","handleTitleChange","text","newTitle","target","value","handleBodyChange","newBody","handlePostUpdate","title","body","handlePostEditCancel","location","userId","id","match","params","username","componentDidMount","fetchUser","fetch","creator","json","postCreator","userName","name","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Modal from 'react-modal';\nimport { Link } from 'react-router-dom';\nimport '../fullBlogPostStyle.css';\n\nexport default class FullBlogPost extends Component {\n  constructor(props){\n    super(props);\n    const {title, body, userId} = props.location.state;\n    this.state={\n      modalIsOpen: false,\n      id: props.match.params.id,\n      userId: userId,\n      username: \"\",\n      title: title,\n      body: body,\n      newTitle: title,\n      newBody: body\n    }\n  }\n\n  handleModal = () => {\n    this.setState({modalIsOpen: !this.state.modalIsOpen});\n  }\n\n  handleTitleChange = (text) => {\n    this.setState({\n      newTitle: text.target.value,\n    })\n  }\n\n  handleBodyChange = (text) => {\n    this.setState({\n      newBody: text.target.value,\n    })\n  }\n\n  handlePostUpdate = () => {\n    this.setState({\n      title: this.state.newTitle,\n      body: this.state.newBody,\n      modalIsOpen: false\n    });\n  }\n\n  handlePostEditCancel = () => {\n    this.setState({\n      newTitle: this.state.title,\n      newBody: this.state.body,\n      modalIsOpen: false\n    })\n  }\n\n  async componentDidMount(){\n    const fetchUser = await fetch(\"http://jsonplaceholder.typicode.com/users\");\n    const creator = await fetchUser.json();\n    const postCreator = creator[(this.state.userId) - 1];\n    this.setState({\n      userName: postCreator.name\n    })\n  }\n\n  render() {\n    return(\n      <div id=\"container\">\n        <Link id=\"backButton\"to=\"./\"> Back </Link>\n        <h1 id=\"postTitle\">{this.state.title}</h1>\n        <p id=\"postBody\">{this.state.body}</p>\n        <p id=\"postCreator\"> Created by {this.state.userName}</p>\n        <button id=\"editButton\" onClick={this.handleModal}>Edit This Post</button>\n        <Modal\n          isOpen={this.state.modalIsOpen}\n          onRequestClose={this.handlePostEditCancel}\n          ariaHideApp={false}\n          contentLabel=\"Edit Post\">\n            <div id=\"modal\">\n              <h1 id=\"modalTitleH1\" > Post Title </h1>\n              <textarea  id=\"titleInput\"  type=\"text\" onChange={ this.handleTitleChange } value={ this.state.newTitle }/>\n              <h1 id=\"modalBodyH1\" > Post Body </h1>\n              <textarea id=\"bodyInput\" type=\"text\" onChange={ this.handleBodyChange } value={ this.state.newBody }/>\n              <button onClick={this.handlePostUpdate} > Save Changes </button>\n              <button onClick={this.handlePostEditCancel} > Cancel </button>\n            </div>\n        </Modal>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}